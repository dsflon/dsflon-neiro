function threeStart(){initThree(),initCamera(),initObject(),cameraRender(),render()}function initThree(){WIDTH=window.innerWidth,HEIGHT=window.innerHeight,container=document.getElementById("render"),renderer=new THREE.CanvasRenderer,renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(WIDTH,HEIGHT),renderer.setClearColor(16777215,1),container.appendChild(renderer.domElement),scene=new THREE.Scene,document.addEventListener("mousemove",onDocumentMouseMove,!1),window.addEventListener("resize",onWindowResize,!1)}function initCamera(){var e=120,n=WIDTH/HEIGHT,a=1,r=3e3;camera=new THREE.PerspectiveCamera(e,n,a,r),camera.position.set(0,0,valObj.CAMERAZ),camera.up.set(0,0,0),camera.lookAt({x:0,y:500,z:0})}function initObject(){group=new THREE.Group,particles=new Array;for(var e=2*Math.PI,n=0,a=0;a<valObj.AMOUNTX;a++)for(var r=0;r<valObj.AMOUNTY;r++){var i=new THREE.SpriteCanvasMaterial({color:15289899,program:function(n){n.globalAlpha=valObj.OPACITY,n.beginPath(),n.arc(0,0,.3,0,e,!0),n.fill()}});particle=particles[n++]=new THREE.Sprite(i),Math.random()*valObj.RANDOM>10?particle.position.z=-1e5:(particle.position.x=a*valObj.SEPARATION-valObj.AMOUNTX*valObj.SEPARATION/2,particle.position.z=r*valObj.SEPARATION-valObj.AMOUNTY*valObj.SEPARATION/2),group.add(particle)}scene.add(group)}function onWindowResize(){windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function onDocumentMouseMove(e){mouseX=e.clientX-windowHalfX,mouseY=e.clientY-windowHalfY}function cameraRender(){if(0>mouseX)var e=-(valObj.CAMERAX/1e3*Math.abs(mouseX));else var e=valObj.CAMERAX/1e3*Math.abs(mouseX);if(0>mouseY)var n=valObj.CAMERAY/1e3*mouseY;else var n=0;group.rotation.y+=2e-5*(e-camera.position.x),camera.position.y+=.02*(100-n*valObj.YAXIS/1.5-camera.position.y),camera.lookAt(scene.position),renderer.render(scene,camera),animationCameraId=requestAnimationFrame(cameraRender)}function render(){var e=new Uint8Array(analyser.frequencyBinCount);analyser.getByteFrequencyData(e);for(var n=0,a=0;a<valObj.AMOUNTX;a++)for(var r=0;r<valObj.AMOUNTY;r++){var i=e[n];particle=particles[n++],particle.position.y=i*valObj.YAXIS,particle.scale.x=i*valObj.SCALE/5+3,particle.scale.y=i*valObj.SCALE/5+3}animationId=requestAnimationFrame(render)}var windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,WIDTH,HEIGHT,container,scene,renderer,mouseX=0,mouseY=0,camera,particles,particle,group;